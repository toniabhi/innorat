<?php

define('GOOGLEANALYTICS_PAGES', "admin\nadmin/*\nbatch\nnode/add*\nnode/*/*\nuser/*/*");

/**
 * Implements hook_menu().
 */
function hcl_google_analytics_menu() {
  $items['admin/config/system/hcl_google_analytics'] = array(
    'title' => 'HCL Google Analytics',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('hcl_ga_settings'),
    'access arguments' => array('administer site configuration'),
  );

  return $items;
}

function hcl_ga_settings($form, $form_state) {
  $form = array();
  $form['hcl_google_analytics_code'] = array(
    '#title' => t('GA Code'),
    '#type' => 'textfield',
    '#default_value' => variable_get('hcl_google_analytics_code', 'UA-'),
    '#size' => 15,
    '#maxlength' => 20,
    '#required' => TRUE,
  );
  $form['hcl_google_analytics_domain'] = array(
    '#title' => t('Domain'),
    '#type' => 'textfield',
    '#default_value' => variable_get('hcl_google_analytics_domain', ''),
  );
  $form['hcl_google_analytics_cross_domain_autolink'] = array(
    '#title' => t('Cross Domain Autolink'),
    '#description' => t('Enter cross domains seperated by commas'),
    '#type' => 'textfield',
    '#default_value' => variable_get('hcl_google_analytics_cross_domain_autolink', ''),
  );
  $pages = variable_get('hcl_google_analytics_exclude_pages', GOOGLEANALYTICS_PAGES);
  $form['hcl_google_analytics_exclude_pages'] = array(
    '#type' => 'textarea',
    '#title' => t('Exclude following pages'),
    '#default_value' => $pages,
    '#wysiwyg' => FALSE,
    '#rows' => 10,
  );
  return system_settings_form($form);
}

/**
 * Implements hook_page_alter() to insert JavaScript to the appropriate scope/region of the page.
 */
function hcl_google_analytics_page_alter(&$page) {
  $id = variable_get('hcl_google_analytics_code', 'UA-');
  $domain = variable_get('hcl_google_analytics_domain', '');
  if($domain == '') {
    global $base_url;
    $domain = str_replace('http://', '', $base_url);
  }

  if ($id && !_hcl_ga_visibility_exclude_pages()) {
    $script = '';
    $script .= "(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');";
    $script .= "ga('create', '$id', '$domain', {'allowLinker': true});";
    $cross_domain = variable_get('hcl_google_analytics_cross_domain_autolink', '');
    if (trim($cross_domain)) {
      $cross_domain = explode(',', $cross_domain);
      $linker = '';
      foreach ($cross_domain as $value) {
        $linker .= "'" . trim($value) . "', ";
      }
      $linker = substr($linker, 0, -2);
      $script .= "ga('require', 'linker');";
      $script .= "ga('linker:autoLink', [$linker] );";
    }
    $script .= "ga('require', 'linkid');";
    $script .= "ga('send', 'pageview');";
    drupal_add_js($script, array('scope' => 'header', 'type' => 'inline'));
  }
}

function _hcl_ga_visibility_exclude_pages() {
  $setting_pages = variable_get('hcl_google_analytics_exclude_pages', GOOGLEANALYTICS_PAGES);
  // Match path if necessary.
  if (!empty($setting_pages)) {
    // Convert path to lowercase. This allows comparison of the same path
    // with different case. Ex: /Page, /page, /PAGE.
    $pages = drupal_strtolower($setting_pages);
    // Convert the Drupal path to lowercase
    $path = drupal_strtolower(drupal_get_path_alias($_GET['q']));
    // Compare the lowercase internal and lowercase path alias (if any).
    $page_match = drupal_match_path($path, $pages);
    if ($path != $_GET['q']) {
      $page_match = $page_match || drupal_match_path($_GET['q'], $pages);
    }
  }
  return $page_match;
}
